{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VoiceBase integration for Amazon Connect (qs-1oaucuqq9)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon Connect configuration"
                    },
                    "Parameters": [
                        "ConnectS3BucketName",
                        "ConnectKinesisStreamArn"
                    ]
                },
                {
                    "Label": {
                        "default": "VoiceBase configuration"
                    },
                    "Parameters": [
                        "VoicebaseApiToken",
                        "VoicebaseEnableKnowledgeDiscovery",
                        "NumberOfKinesisShards",
                        "VBS3KeyPrefix",
                        "VBAppendNewline"
                    ]
                }
            ],
            "ParameterLabels": {
                "ConnectS3BucketName": {
                    "default": "Call Recording Amazon S3 Bucket Name"
                },
                "VoicebaseApiToken": {
                    "default": "VoiceBase API Token"
                },
                "VoicebaseEnableKnowledgeDiscovery": {
                    "default": "Keyword/Topic extraction"
                },
                "ConnectKinesisStreamArn": {
                    "default": "Amazon Connect CTR Output Stream ARN"
                },
                "NumberOfKinesisShards": {
                    "default": "VoiceBase Transcript Amazon Kinesis Data Stream Shard count"
                },
                "VBS3KeyPrefix": {
                    "default": "VoiceBase Transcription Output S3 Key Prefix"
                },
                "VBAppendNewline": {
                    "default": "Append Newline Character to Transcription Output"
                }
            }
        }
    },
    "Parameters": {
        "VoicebaseApiToken": {
            "Type": "String",
            "Description": "Your VoiceBase API Token from the VoiceBase Developer Portal"
        },
        "VoicebaseEnableKnowledgeDiscovery": {
            "AllowedValues": [
                "no",
                "yes"
            ],
            "Type": "String",
            "Default": "no",
            "Description": "Enable keyword/topic extraction when processing media files by default"
        },
        "ConnectS3BucketName": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "Description": "Enter the name of the Amazon S3 Bucket where your Amazon Connect instance stores call recordings."
        },
        "ConnectKinesisStreamArn": {
            "Type": "String",
            "Description": "Enter the ARN of your Amazon Connect instance's CTR output Amazon Kinesis Data Stream."
        },
        "NumberOfKinesisShards": {
            "Type": "Number",
            "Default": 1,
            "Description": "Number of shards for transcription Data Stream.  This should be at least the number of shards on your Amazon Connect instance's output Amazon Kinesis Data Stream."
        },
        "VBS3KeyPrefix": {
            "Type": "String",
            "Default": "connect/voicebase/transcriptions/",
            "Description": "S3 key prefix for VoiceBase transcription delivery; can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "VoiceBase transcription key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)"
        },
        "VBAppendNewline": {
            "AllowedValues": [
                "yes",
                "no"
            ],
            "Type": "String",
            "Default": "yes",
            "Description": "Append Newline Character to Transcription Output. Useful when using ETL tools that support NLDJSON."
        }
    },
    "Rules": {
        "RegionSupport": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "us-east-1"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "Supported regions: US East (N. Virginia) - us-east-1"
                }
            ]
        }
    },
    "Conditions": {
        "enableKnowledgeDiscovery": {
            "Fn::Equals": [
                {
                    "Ref": "VoicebaseEnableKnowledgeDiscovery"
                },
                "yes"
            ]
        },
        "appendNewline": {
            "Fn::Equals": [
                {
                    "Ref": "VBAppendNewline"
                },
                "yes"
            ]
        }
    },
    "Resources": {
        "VBS3BucketName": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Status": "Enabled",
                            "ExpirationInDays": "90"
                        }
                    ]
                }
            }
        },
        "ConnectToVoicebaseRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
            }
        },
        "VoicebaseCallbackRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
            }
        },
        "VoicebaseCallbackKinesisPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "VoicebaseCallbackKinesisPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams",
                                "kinesis:GetShardIterator",
                                "kinesis:PutRecords",
                                "kinesis:PutRecord"
                            ],
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "VoicebaseTranscriptionStream",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "VoicebaseCallbackRole"
                    }
                ]
            }
        },
        "VoicebaseCallbackLogPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "VoicebaseCallbackLogPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Fn::Split": [
                                                            ":",
                                                            {
                                                                "Fn::GetAtt": [
                                                                    "VoicebaseCallbackLambda",
                                                                    "Arn"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "VoicebaseCallbackRole"
                    }
                ]
            }
        },
        "ConnectToVoicebaseS3Policy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ConnectToVoicebaseS3Policy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectAcl"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "ConnectS3BucketName"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetBucketLocation",
                                "s3:GetBucketAcl"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "ConnectS3BucketName"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "ConnectToVoicebaseRole"
                    }
                ]
            }
        },
        "ConnectToVoicebaseLogPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ConnectToVoicebaseLogPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Fn::Split": [
                                                            ":",
                                                            {
                                                                "Fn::GetAtt": [
                                                                    "ConnectToVoicebaseLambda",
                                                                    "Arn"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "ConnectToVoicebaseRole"
                    }
                ]
            }
        },
        "ConnectToVoicebaseKMSPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ConnectToVoicebaseKMSPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "kms:Decrypt"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "ConnectToVoicebaseRole"
                    }
                ]
            }
        },
        "ConnectToVoicebaseKinesisPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ConnectToVoicebaseKinesisPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams",
                                "kinesis:GetShardIterator",
                                "kinesis:GetRecords",
                                "kinesis:GetRecord"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Ref": "ConnectKinesisStreamArn"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "ConnectToVoicebaseRole"
                    }
                ]
            }
        },
        "VoicebaseTranscriptionStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "ShardCount": {
                    "Ref": "NumberOfKinesisShards"
                }
            }
        },
        "VoicebaseTokenValidationLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "MemorySize": 256,
                "Handler": "com.voicebase.gateways.lambda.LambdaVoicebaseApiTokenValidator::handleRequest",
                "Role": {
                    "Fn::GetAtt": [
                        "ConnectToVoicebaseRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-voicebase/functions/packages/voicebase-lambda-auth-validation/lambda.jar"
                },
                "Environment": {
                    "Variables": {
                        "VOICEBASE_API_TOKEN": {
                            "Ref": "VoicebaseApiToken"
                        }
                    }
                },
                "Runtime": "java8",
                "Timeout": "60"
            }
        },
        "VoicebaseTokenValidation": {
            "Type": "Custom::VoicebaseTokenValidation",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "VoicebaseTokenValidationLambda",
                        "Arn"
                    ]
                }
            }
        },
        "VoicebaseCallbackApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "VoiceBaseCallbackApi",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                }
            }
        },
        "ConnectToVoicebaseLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "MemorySize": 256,
                "Handler": "com.voicebase.gateways.awsconnect.forward.LambdaRecordProcessor::handleRequest",
                "Role": {
                    "Fn::GetAtt": [
                        "ConnectToVoicebaseRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-voicebase/functions/packages/awsconnect-lambda-voicebase-forward/lambda.jar"
                },
                "Environment": {
                    "Variables": {
                        "VOICEBASE_API_TOKEN": {
                            "Ref": "VoicebaseApiToken"
                        },
                        "VOICEBASE_KNOWLEDGE_DISCOVERY_ENABLE": {
                            "Fn::If": [
                                "enableKnowledgeDiscovery",
                                "true",
                                "false"
                            ]
                        },
                        "VOICEBASE_CALLBACK_URL": {
                            "Fn::Join": [
                                "",
                                [
                                    "https://",
                                    {
                                        "Ref": "VoicebaseCallbackApi"
                                    },
                                    ".execute-api.",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".amazonaws.com/public/outgoing"
                                ]
                            ]
                        }
                    }
                },
                "Runtime": "java8",
                "Timeout": "90"
            }
        },
        "VoicebaseCallbackLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "MemorySize": 256,
                "Handler": "com.voicebase.gateways.awsconnect.response.LambdaTranscriptionProcessor::handleRequest",
                "Role": {
                    "Fn::GetAtt": [
                        "VoicebaseCallbackRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "aws-quickstart",
                    "S3Key": "connect-integration-voicebase/functions/packages/awsconnect-lambda-voicebase-response/lambda.jar"
                },
                "Environment": {
                    "Variables": {
                        "VOICEBASE_TRANSCRIPT_OUTPUT_STREAM": {
                            "Ref": "VoicebaseTranscriptionStream"
                        },
                        "VOICEBASE_TRANSCRIPT_OUTPUT_ADD_NEWLINE": {
                            "Fn::If": [
                                "appendNewline",
                                "true",
                                "false"
                            ]
                        }
                    }
                },
                "Runtime": "java8",
                "Timeout": "90"
            }
        },
        "ConnectToVoicebaseLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
                "ConnectToVoicebaseKinesisPolicy",
                "ConnectToVoicebaseLogPolicy"
            ],
            "Properties": {
                "BatchSize": 10,
                "Enabled": true,
                "EventSourceArn": {
                    "Ref": "ConnectKinesisStreamArn"
                },
                "FunctionName": {
                    "Ref": "ConnectToVoicebaseLambda"
                },
                "StartingPosition": "LATEST"
            }
        },
        "VoicebaseCallbackLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "VoicebaseCallbackLambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "VoicebaseCallbackApi"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "VoicebaseCallbackStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "VoicebaseCallbackDeployment"
                },
                "MethodSettings": [
                    {
                        "DataTraceEnabled": true,
                        "HttpMethod": "POST",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "VoicebaseCallbackApi"
                },
                "StageName": "latest"
            }
        },
        "VoicebaseCallbackDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "VoicebaseCallbackMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "VoicebaseCallbackApi"
                },
                "StageName": "public"
            }
        },
        "VoicebaseCallbackResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "VoicebaseCallbackApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "VoicebaseCallbackApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "outgoing"
            }
        },
        "VoicebaseCallbackMethod": {
            "DependsOn": "VoicebaseCallbackLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "VoicebaseCallbackLambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "{",
                                    "\"name\": \"$input.params('name')\"",
                                    "}"
                                ]
                            ]
                        }
                    }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {
                    "Ref": "VoicebaseCallbackResource"
                },
                "RestApiId": {
                    "Ref": "VoicebaseCallbackApi"
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
            }
        },
        "VoicebaseTranscriptionS3OutputRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "firehose.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole",
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "VoicebaseTranscriptionS3OutputKinesisPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "VoicebaseTranscriptionS3OutputKinesisPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "kinesis:DescribeStream",
                                "kinesis:GetShardIterator",
                                "kinesis:GetRecords"
                            ],
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "VoicebaseTranscriptionStream",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "VoicebaseTranscriptionS3OutputRole"
                    }
                ]
            }
        },
        "VoicebaseTranscriptionS3OutputPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "VoicebaseTranscriptionS3OutputPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:AbortMultipartUpload",
                                "s3:GetBucketLocation",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:ListBucketMultipartUploads",
                                "s3:PutObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "VBS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "VBS3BucketName"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "VoicebaseTranscriptionS3OutputRole"
                    }
                ]
            }
        },
        "VoicebaseTranscriptionS3Output": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "DependsOn": [
                "VoicebaseTranscriptionS3OutputRole",
                "VoicebaseTranscriptionS3OutputKinesisPolicy"
            ],
            "Properties": {
                "DeliveryStreamType": "KinesisStreamAsSource",
                "KinesisStreamSourceConfiguration": {
                    "KinesisStreamARN": {
                        "Fn::GetAtt": [
                            "VoicebaseTranscriptionStream",
                            "Arn"
                        ]
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "VoicebaseTranscriptionS3OutputRole",
                            "Arn"
                        ]
                    }
                },
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "VBS3BucketName"
                                }
                            ]
                        ]
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": {
                        "Ref": "VBS3KeyPrefix"
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 5
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "VoicebaseTranscriptionS3OutputRole",
                            "Arn"
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "VoicebaseTokenValidationLambda": {
            "Description": "VoiceBase token validation Lambda function.",
            "Value": {
                "Fn::GetAtt": "VoicebaseTokenValidationLambda.Arn"
            }
        },
        "ConnectToVoicebaseLambda": {
            "Description": "VoiceBase integration Lambda function.",
            "Value": {
                "Fn::GetAtt": "ConnectToVoicebaseLambda.Arn"
            }
        },
        "VoicebaseCallbackLambda": {
            "Description": "VoiceBase vall back Lambda function.",
            "Value": {
                "Fn::GetAtt": "VoicebaseCallbackLambda.Arn"
            }
        },
        "VoicebaseTranscriptionStream": {
            "Description": "VoiceBase Transcription Stream.Transcription delivered from VoiceBase.",
            "Value": {
                "Fn::GetAtt": "VoicebaseTranscriptionStream.Arn"
            }
        },
        "VoicebaseTranscriptionS3Bucket": {
            "Description": "VoiceBase Transcription Output S3 Bucket Name",
            "Value": {
                "Ref": "VBS3BucketName"
            }
        },
        "VoicebaseTranscriptionS3KeyPrefix": {
            "Description": "VoiceBase Transcription Output S3 Key Prefix",
            "Value": {
                "Ref": "VBS3KeyPrefix"
            }
        }
    }
}